<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ptconnect.myapp.persistance.TrainerServiceMapper">
	
	<!-- 트레이너 찾기 비 로그인 or 로그인-->
	<select id="findTrainer" parameterType="scri" resultType="tio">
		SELECT m.mbNo, m.mbAuth, m.mbEmail, m.mbName, m.mbMapY, m.mbMapX
		, t.tnNo, t.ctNo, t.tnOneLine, t.tnIntro, t.tnTicket, c.ctName
		, (SELECT mtc.mbAddr FROM member mtc WHERE mtc.mbNo = c.mbNo) AS mbAddr
		, (SELECT COUNT(r.rvNo) FROM review r WHERE r.tnNo = t.tnNo AND r.rvDelYN = 'N') AS reviewCnt
		, (SELECT fd.fdName FROM filedetail fd WHERE fd.flNo = t.flNo ORDER BY fd.fdNo ASC LIMIT 1) AS tnImage
		, (SELECT fd.fdName FROM filedetail fd WHERE fd.flNo = c.flNo ORDER BY fd.fdNo ASC LIMIT 1) AS ctImage
		<choose>
			<when test="mbNo == 0 or mbNo == null">	<!-- 비 로그인 시 이젠IT 좌표 위치 기준으로 반경 검색 -->
				, (SELECT ST_DISTANCE_SPHERE(POINT(127.1324143491829, 35.84026098258203), POINT(m.mbMapX, m.mbMapY))) AS distance
			</when>
			<otherwise>
				, (SELECT ST_DISTANCE_SPHERE(POINT(#{mbMapX}, #{mbMapY}), POINT(m.mbMapX, m.mbMapY))) AS distance
				, (SELECT u.mbAddr FROM member u WHERE u.mbNo = #{mbNo}) AS mbAddr
			</otherwise>
		</choose>
		FROM member m
		JOIN trainerinfo t ON m.mbNo = t.mbNo AND t.tnDelYN = 'N'
		JOIN centerinfo c ON t.ctNo = c.ctNo AND c.ctDelYN = 'N'
		<!-- LEFT JOIN review r ON t.tnNo = r.tnNo AND r.rvDelYN = 'N' -->
		WHERE m.mbDelYN = 'N'
		<choose>
			<when test="mbNo == 0 or mbNo == null">
				<![CDATA[
				AND (SELECT ST_DISTANCE_SPHERE(POINT(127.1324143491829, 35.84026098258203), POINT(m.mbMapX, m.mbMapY))) <= #{distance}
				]]>
			</when>
			<otherwise>
				<![CDATA[
				AND (SELECT ST_DISTANCE_SPHERE(POINT(#{mbMapX}, #{mbMapY}), POINT(m.mbMapX, m.mbMapY))) <= #{distance}
				AND NOT m.mbNo = #{mbNo}
				]]>
			</otherwise>
		</choose>
		<include refid="trainerSearch"/>
		<choose>
			<when test="orderBy == null or orderBy.equals('') or orderBy.equals(' ')">
				ORDER BY distance ASC
			</when>
			<when test="orderBy.equals('distance')">
				ORDER BY #{orderBy} ASC
			</when>
			<otherwise>
				ORDER BY #{orderBy} DESC
			</otherwise>
		</choose>
		LIMIT #{page}, 15
	</select>
	
	<!-- 로그인 한 유저의 주소 -->
	<select id="loginUserAddr" parameterType="int" resultType="String">
		SELECT mbAddr FROM member WHERE mbNo = #{mbNo} AND mbDelYN = 'N';
	</select>
	
	<!-- 트레이너 총 개수 -->
	<select id="trainerTotalCount" parameterType="scri" resultType="int">
		SELECT COUNT(t.tnNo) AS trainerCNT
		FROM member m
		JOIN trainerinfo t ON m.mbNo = t.mbNo AND t.tnDelYN = 'N'
		JOIN centerinfo c ON t.ctNo = c.ctNo AND c.ctDelYN = 'N'
		WHERE m.mbDelYN = 'N'
		<choose>
			<when test="mbNo == 0 or mbNo == null">
				<![CDATA[
				AND (SELECT ST_DISTANCE_SPHERE(POINT(127.1324143491829, 35.84026098258203), POINT(m.mbMapX, m.mbMapY))) <= #{distance}
				]]>				
			</when>
			<otherwise>
				<![CDATA[
				AND (SELECT ST_Distance_Sphere(POINT(#{mbMapX}, #{mbMapY}), POINT(m.mbMapX, m.mbMapY))) <= #{distance}
				]]>
				AND m.mbNo NOT IN(#{mbNo})				
				
			</otherwise>
		</choose>
		<include refid="trainerSearch"/>
	</select>
	
	<!-- 트레이너 검색 조건 -->
	<sql id="trainerSearch">
		<if test="keyword != null and keyword != ''">
			AND (
				m.mbName LIKE CONCAT("%",#{keyword},"%")
				OR m.mbAddr LIKE CONCAT("%",#{keyword},"%")
				OR c.ctName LIKE CONCAT("%",#{keyword},"%")
				)
		</if>
	</sql>	
	
	<!-- 트레이너정보등록 -->

	<insert id="trainerInsert" parameterType="tio" useGeneratedKeys="true" keyProperty="tnNo">
		<selectKey resultType="int" keyProperty="tnNo"  order="AFTER">
		select max(tnNo) as tnNo from trainerInfo
		</selectKey>
		insert into trainerInfo(mbNo, tnOneLine, tnIntro, tnTicket)
	 	values(#{mbNo}, #{tnOneLine},#{tnIntro},#{tnTicket})
	</insert>
	<!-- 자격 정보 등록 -->
	<insert id="qualifyInsert" parameterType="tio">
		insert into qualify(tnNo, qualify)
	 	values(#{tnNo}, #{qualify})
	</insert>
	
	<!-- 레슨 가격 정보 등록 -->
	<insert id="lessonPriceInsert" parameterType="tio">
		insert into lessonPrice(tnNo, lpCf, lpCount, lessonPrice)
	 	values(#{tnNo}, #{lpCf}, #{lpCount}, #{lessonPrice})
	</insert>

	<!-- 프로그램 등록 -->
	<insert id="programInsert" parameterType="tio">
		insert into program(tnNo, pgContent)
	 	values(#{tnNo}, #{pgContent})
	</insert>
	
	<!-- 파일 정보 등록 -->
	<insert id="fileInsert" parameterType="fdo"  useGeneratedKeys="true" keyProperty="flNo">
		<selectKey resultType="int" keyProperty="flNo"  order="AFTER">
		select max(flNo) as flNo from file_
		</selectKey>
		insert into file_(flCf, flCfNo)
		values( CASE 
	                WHEN #{tnNo} IS NOT NULL THEN 'T'
	                <!-- 	                WHEN #{ctNo} IS NOT NULL THEN 'C' -->
<!-- 	                WHEN #{rvNo} IS NOT NULL THEN 'R' -->
<!-- 	                WHEN #{bdNo} IS NOT NULL THEN 'B' -->
	                ELSE NULL
	            END,
	            CASE 
	                WHEN #{tnNo} IS NOT NULL THEN #{tnNo}
	                <!-- 	                WHEN #{ctNo} IS NOT NULL THEN #{ctNo} -->
<!-- 	                WHEN #{rvNo} IS NOT NULL THEN #{rvNo} -->
<!-- 	                WHEN #{bdNo} IS NOT NULL THEN #{bdNo} -->
	                ELSE NULL
	            END) 
	</insert>
	
	<insert id="fileDetailInsert" parameterType="fdo">
		insert into fileDetail(flNo, fdName, fdPName)
		values(#{flNo}, #{fdName}, #{fdPName})
	</insert>
	
	<update id="trainerInfoUpdate" parameterType="tio">
	    UPDATE trainerInfo
	    SET flNo = #{flNo}
	    WHERE tnNo = #{tnNo}
	</update>
	
	<!-- 선택한 트레이너 정보 불러옴 -->
	<select id="TrainerInfoView" parameterType="int" resultType="tio">
		SELECT m.mbNo, m.mbAuth, m.mbEmail, m.mbName, m.mbMapY, m.mbMapX
		, t.tnNo, t.ctNo, t.tnOneLine, t.tnIntro, t.tnTicket, c.ctName
		, (SELECT mtc.mbAddr FROM member mtc WHERE mtc.mbNo = c.mbNo) AS mbAddr
		, (SELECT COUNT(r.rvNo) FROM review r WHERE r.tnNo = t.tnNo AND r.rvDelYN = 'N') AS reviewCnt
		, (SELECT avg(r.rvRate) FROM review r WHERE r.tnNo = t.tnNo AND r.rvDelYN = 'N') AS reviewRate
		FROM member m
		JOIN trainerinfo t ON m.mbNo = t.mbNo AND t.tnDelYN = 'N'
		JOIN centerinfo c ON t.ctNo = c.ctNo AND c.ctDelYN = 'N'
		WHERE m.mbDelYN = 'N'
		AND t.tnNo = #{tnNo};
	</select>

	<!-- 선택한 트레이너에 대한 리뷰들 불러옴 -->
	<select id="TrainerInfoView_reviews" parameterType="int" resultType="rvo">
		SELECT m.mbName, r.rvNo, r.mbNo, r.tnNo, r.flNo, r.rvContent, r.rvRate, r.rvDate, r.rvDateM, r.rvDelYN
		FROM review r
		JOIN member m ON r.mbNo = m.mbNo
		JOIN trainerinfo t ON r.tnno = t.tnno AND r.tnno = #{tnNo}
		WHERE m.mbDelYn = 'N' AND r.rvDelYN = 'N';
	</select>
	
	<!-- 선택한 트레이너에 대한 리뷰들 각각의 사진파일 불러옴 -->
	<select id="TrainerInfoView_reviews_files" parameterType="int" resultType="fdo">
		SELECT * FROM filedetail WHERE flno = #{flNo} AND fdDelYN = 'N';
	</select>
	
	<update id="trainerModify" parameterType="tio">
		update trainerInfo set tnOneLine = #{tnOneLine}, tnIntro = #{tnIntro},
		tnTicket = #{tnTicket}, tnDateM = now()
		where tnNo = #{tnNo}
	</update>
	
	<update id="qualifyModify" parameterType="tio">
		update qualify set qualify = #{qualify}, qlDateM = now()
		where tnNo = #{tnNo}
	</update>
	
	<update id="lessonPriceModify" parameterType="tio">
		update lessonPrice set lpCf = #{lpCf}, lpCount = #{lpCount},
		lessonPrice = #{lessonPrice}, lpDateM = now()
		where tnNo = #{tnNo}
	</update>
	
	<update id="programModify" parameterType="tio">
		update program set pgContent = #{pgContent}, pgDateM = now()
		where tnNo = #{tnNo}
	</update>
	
	<update id="file_Modify" parameterType="fdo">
		update file_ set flCf = 'T', flCfNo = #{tnNo},
		flDateM = now()
		where flCf = 'T' and flCfNo = #{tnNo}
		<selectKey keyProperty="flNo" resultType="int" order="AFTER">
        SELECT flNo
        FROM file_
        WHERE flCf = 'T' AND flCfNo = #{tnNo}
</selectKey>
	</update>
	
	<update id="fileDetailModify" parameterType="fdo">
		update fileDetail set fdDelYN = 'Y' 
		where flNo = #{flNo}
	</update>
	
	
	
</mapper>